Traceback (most recent call last):
  File "/orfeo/cephfs/home/dssc/ezappia/RL_IL_AR_for_surgery/irl_sac_train.py", line 127, in <module>
    agent.learn(total_timesteps=1500)
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/stable_baselines3/sac/sac.py", line 308, in learn
    return super().learn(
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/stable_baselines3/common/off_policy_algorithm.py", line 328, in learn
    rollout = self.collect_rollouts(
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/stable_baselines3/common/off_policy_algorithm.py", line 560, in collect_rollouts
    new_obs, rewards, dones, infos = env.step(actions)
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/stable_baselines3/common/vec_env/base_vec_env.py", line 222, in step
    return self.step_wait()
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/stable_baselines3/common/vec_env/dummy_vec_env.py", line 59, in step_wait
    obs, self.buf_rews[env_idx], terminated, truncated, self.buf_infos[env_idx] = self.envs[env_idx].step(  # type: ignore[assignment]
  File "/orfeo/cephfs/home/dssc/ezappia/RL_IL_AR_for_surgery/irl_sac_train.py", line 53, in step
    reward = self.reward_net(state_tensor, action_tensor).item()
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/orfeo/cephfs/home/dssc/ezappia/RL_IL_AR_for_surgery/irl_sac_train.py", line 40, in forward
    return self.model(x)
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1739, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1750, in _call_impl
    return forward_call(*args, **kwargs)
  File "/u/dssc/ezappia/miniconda3/envs/tracking_env/lib/python3.10/site-packages/torch/nn/modules/linear.py", line 125, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu! (when checking argument for argument mat1 in method wrapper_CUDA_addmm)
